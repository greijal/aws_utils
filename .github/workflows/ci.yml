name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar lint (flake8)
        run: |
          pip install flake8
          flake8 src/ tests/

  unit-test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar testes unitários
        run: |
          pip install pytest pytest-cov
          pytest --cov=src/aws_utils tests/unit

      - name: Publicar cobertura no PR
        uses: actions/upload-artifact@v4
        with:
          name: cobertura
          path: .coverage

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          SERVICES: sqs
          DEFAULT_REGION: us-east-1
        options: >-
          --health-cmd "curl -f http://localhost:4566/_localstack/health || exit 1"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 10
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Subir docker-compose
        run: docker-compose up -d

      - name: Esperar LocalStack
        run: |
          until curl -s http://localhost:4566/_localstack/health | grep "\"sqs\": \"running\""; do
            echo "Aguardando LocalStack iniciar..."
            sleep 5
          done

      - name: Rodar testes de integração
        run: |
          pip install pytest
          pytest tests/integration/

      - name: Parar docker-compose
        if: always()
        run: docker-compose down

  publish:
    needs: [unit-test, integration-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar build e twine
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build do pacote
        run: python -m build

      - name: Publicar no PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*