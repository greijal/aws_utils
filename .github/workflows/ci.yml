name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar lint (flake8)
        run: |
          pip install flake8
          flake8 src/ tests/

  unit-test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar testes unitários
        run: |
          pip install pytest pytest-cov
          pytest --cov=src/aws_utils tests/

      - name: Publicar cobertura no PR
        uses: actions/upload-artifact@v4
        with:
          name: cobertura
          path: .coverage

  publish:
    needs: [unit-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar build e twine
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build do pacote
        run: python -m build

      - name: Publicar no PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*